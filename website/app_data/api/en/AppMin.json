{
    "name": "FastSitePHP\\AppMin",
    "short_name": "AppMin",
    "link": "AppMin",
    "namespace": "FastSitePHP",
    "description": "The AppMin Class contains core code from the Application Class and is much smaller in size. If you have a minimal site such as a few simple web services then AppMin could be used as an alternative to the Application Class.\n\nDue to its small size the AppMin Class may run twice as fast as the Application Class on some servers, however this is typically a very small number (thousands or tens of thousands of a second only). In general if using PHP 7 with common production settings on a Linux Server there will be no difference between this Class and the Application Class.\n\nIf you are using this class with only a few classes you might want to consider copying the files to your project and modifying this class to fit the needs of your site.",
    "attributes": [],
    "properties": [
        {
            "name": "status_code",
            "target": "prop_status_code",
            "isStatic": false,
            "defaultValue": "null",
            "description": "HTTP Response Status Code",
            "attributes": [
                "@var int|null"
            ],
            "dataType": "int\nnull",
            "links": []
        },
        {
            "name": "headers",
            "target": "prop_headers",
            "isStatic": false,
            "defaultValue": "[]",
            "description": "HTTP Response Headers",
            "attributes": [
                "@var array"
            ],
            "dataType": "array",
            "links": []
        },
        {
            "name": "cors_headers",
            "target": "prop_cors_headers",
            "isStatic": false,
            "defaultValue": "null",
            "description": "HTTP Response Headers for CORS",
            "attributes": [
                "@var array|null"
            ],
            "dataType": "array\nnull",
            "links": []
        },
        {
            "name": "no_cache",
            "target": "prop_no_cache",
            "isStatic": false,
            "defaultValue": "false",
            "description": "If [true] then the following response headers will be sent to the client:\n\n    Cache-Control: no-cache, no-store, must-revalidate\n    Pragma: no-cache\n    Expires: -1",
            "attributes": [
                "@var bool"
            ],
            "dataType": "bool",
            "links": []
        },
        {
            "name": "template_dir",
            "target": "prop_template_dir",
            "isStatic": false,
            "defaultValue": "null",
            "description": "Optional Location of the template files that get rendered when using the [render()] function.",
            "attributes": [
                "@var string|null"
            ],
            "dataType": "string\nnull",
            "links": []
        },
        {
            "name": "error_template",
            "target": "prop_error_template",
            "isStatic": false,
            "defaultValue": "null",
            "description": "Array of template files or a single file name as a string.",
            "attributes": [
                "@var string|array|null"
            ],
            "dataType": "string\narray\nnull",
            "links": []
        },
        {
            "name": "not_found_template",
            "target": "prop_not_found_template",
            "isStatic": false,
            "defaultValue": "null",
            "description": "Array of not-found template files or a single file name as a string.",
            "attributes": [
                "@var string|array|null"
            ],
            "dataType": "string\narray\nnull",
            "links": []
        },
        {
            "name": "error_page_title",
            "target": "prop_error_page_title",
            "isStatic": false,
            "defaultValue": "\"An error has occurred\"",
            "description": "Title for 500 Error Responses, available as [$page_title] for the error template.",
            "attributes": [
                "@var string|null"
            ],
            "dataType": "string\nnull",
            "links": []
        },
        {
            "name": "error_page_message",
            "target": "prop_error_page_message",
            "isStatic": false,
            "defaultValue": "\"An error has occurred while processing your request.\"",
            "description": "Message for 500 Error Responses, available as [$message] for the error template.",
            "attributes": [
                "@var string|null"
            ],
            "dataType": "string\nnull",
            "links": []
        },
        {
            "name": "not_found_page_title",
            "target": "prop_not_found_page_title",
            "isStatic": false,
            "defaultValue": "\"Page Not Found\"",
            "description": "Title for 404 'Not Found' Responses, available as [$page_title] for the template.",
            "attributes": [
                "@var string|null"
            ],
            "dataType": "string\nnull",
            "links": []
        },
        {
            "name": "not_found_page_message",
            "target": "prop_not_found_page_message",
            "isStatic": false,
            "defaultValue": "\"The requested page could not be found.\"",
            "description": "Message for 404 'Not Found' Responses, available as [$message] for the template.",
            "attributes": [
                "@var string|null"
            ],
            "dataType": "string\nnull",
            "links": []
        },
        {
            "name": "method_not_allowed_title",
            "target": "prop_method_not_allowed_title",
            "isStatic": false,
            "defaultValue": "\"Error - Method Not Allowed\"",
            "description": "Title for 405 'Method Not Allowed' Responses, available as [$page_title] for the template.",
            "attributes": [
                "@var string|null"
            ],
            "dataType": "string\nnull",
            "links": []
        },
        {
            "name": "method_not_allowed_message",
            "target": "prop_method_not_allowed_message",
            "isStatic": false,
            "defaultValue": "\"A [{method}] request was submitted however this route only allows for [{allowed_methods}] methods.\"",
            "description": "Message for 405 'Method Not Allowed' Responses, available as [$message] for the template.",
            "attributes": [
                "@var string|null"
            ],
            "dataType": "string\nnull",
            "links": []
        },
        {
            "name": "strict_url_mode",
            "target": "prop_strict_url_mode",
            "isStatic": false,
            "defaultValue": "false",
            "description": "By default, a request for '\/about\/' with route '\/about' will match, however if [strict_url_mode] is set to true then '\/about\/' and '\/about' would be separate URL's.",
            "attributes": [
                "@var bool"
            ],
            "dataType": "bool",
            "links": []
        }
    ],
    "methods": [
        {
            "definition": "setup($timezone)",
            "target": "fn_setup",
            "isStatic": false,
            "isGetterSetter": false,
            "description": "Setup error handling and optionally set a time-zone for the application",
            "attributes": [
                "@param string|null $timezone",
                "@return void",
                "@throws \\Exception"
            ],
            "returnType": null,
            "links": []
        },
        {
            "definition": "exceptionHandler($e)",
            "target": "fn_exceptionHandler",
            "isStatic": false,
            "isGetterSetter": false,
            "description": "Application defined exception handler function",
            "attributes": [
                "@param \\Exception|\\Throwable $e",
                "@return void"
            ],
            "returnType": null,
            "links": []
        },
        {
            "definition": "errorHandler($severity, $message, $file, $line)",
            "target": "fn_errorHandler",
            "isStatic": false,
            "isGetterSetter": false,
            "description": "Application defined error handler function",
            "attributes": [
                "@param int $severity",
                "@param string $message",
                "@param string $file",
                "@param int $line",
                "@return bool",
                "@throws \\ErrorException"
            ],
            "returnType": "bool",
            "links": []
        },
        {
            "definition": "shutdown()",
            "target": "fn_shutdown",
            "isStatic": false,
            "isGetterSetter": false,
            "description": "Application defined error handler function for fatal errors",
            "attributes": [
                "@return void"
            ],
            "returnType": null,
            "links": []
        },
        {
            "definition": "escape($text)",
            "target": "fn_escape",
            "isStatic": false,
            "isGetterSetter": false,
            "description": "Convert special characters to HTML entities. This function is a wrapper for the php function:\n    htmlspecialchars($text, ENT_QUOTES, 'UTF-8', true)\n\nCharacters escaped are:\n    \" = &quot;\n    & = &amp;\n    ' = &#039;\n    < = &lt;\n    > = &gt;",
            "attributes": [
                "@param string $text",
                "@return string"
            ],
            "returnType": "string",
            "links": []
        },
        {
            "definition": "render($templates, $data = null)",
            "target": "fn_render",
            "isStatic": false,
            "isGetterSetter": false,
            "description": "Render a single template file or an array of template files using variables specified in the $data parameter.",
            "attributes": [
                "@param array|string $templates",
                "@param array|null $data",
                "@return string"
            ],
            "returnType": "string",
            "links": []
        },
        {
            "definition": "route($pattern, \\Closure $callback, $method = null)",
            "target": "fn_route",
            "isStatic": false,
            "isGetterSetter": false,
            "description": "Add a route for an HTTP Request",
            "attributes": [
                "@param string $pattern",
                "@param \\Closure $callback",
                "@param string|null $method (default: null)",
                "@return Route"
            ],
            "returnType": "Route",
            "links": []
        },
        {
            "definition": "get($pattern, \\Closure $callback)",
            "target": "fn_get",
            "isStatic": false,
            "isGetterSetter": false,
            "description": "Add a route for an HTTP 'GET' Request",
            "attributes": [
                "@param string $pattern",
                "@param \\Closure $callback",
                "@return Route"
            ],
            "returnType": "Route",
            "links": []
        },
        {
            "definition": "post($pattern, \\Closure $callback)",
            "target": "fn_post",
            "isStatic": false,
            "isGetterSetter": false,
            "description": "Add a route for an HTTP 'POST' Request",
            "attributes": [
                "@param string $pattern",
                "@param \\Closure $callback",
                "@return Route"
            ],
            "returnType": "Route",
            "links": []
        },
        {
            "definition": "routes()",
            "target": "fn_routes",
            "isStatic": false,
            "isGetterSetter": false,
            "description": "Return the Array of Defined Routes",
            "attributes": [
                "@return array"
            ],
            "returnType": "array",
            "links": []
        },
        {
            "definition": "redirect($url, $status_code = 302)",
            "target": "fn_redirect",
            "isStatic": false,
            "isGetterSetter": false,
            "description": "Redirect the user to another page or site. This must be called prior to headers and content being sent to the user. Defaults to a [302 'Found'] Response.\n\nExample:\n\n    \/\/ User makes this request\n    $app->get('\/page1', function() use ($app) {\n        $app->redirect('page2');\n    });\n\n    \/\/ User will then see this URL and Response\n    $app->get('\/page2', function() {\n        return 'page2';\n    });",
            "attributes": [
                "@param string $url",
                "@param int $status_code",
                "@return void",
                "@throws \\Exception"
            ],
            "returnType": null,
            "links": []
        },
        {
            "definition": "requestedPath()",
            "target": "fn_requestedPath",
            "isStatic": false,
            "isGetterSetter": false,
            "description": "Return the Requested Path (Page only, excluding site, base directory, query strings, etc). This will return the same result regardless of the Web Server used and it will be based on where the [index.php] or entry PHP file is located.",
            "attributes": [
                "@return string|null"
            ],
            "returnType": "string | null",
            "links": []
        },
        {
            "definition": "rootUrl()",
            "target": "fn_rootUrl",
            "isStatic": false,
            "isGetterSetter": false,
            "description": "Return the Site Root URL; the URL returned is the base URL for all pages.",
            "attributes": [
                "@return string|null"
            ],
            "returnType": "string | null",
            "links": []
        },
        {
            "definition": "rootDir()",
            "target": "fn_rootDir",
            "isStatic": false,
            "isGetterSetter": false,
            "description": "Return the Site Root URL; the URL returned is the base URL for all pages.",
            "attributes": [
                "@return string"
            ],
            "returnType": "string",
            "links": []
        },
        {
            "definition": "routeMatches($pattern, $path)",
            "target": "fn_routeMatches",
            "isStatic": false,
            "isGetterSetter": false,
            "description": "Check if a the current url path matches a defined route.",
            "attributes": [
                "@param string $pattern",
                "@param string $path",
                "@return array|bool",
                "@throws \\Exception"
            ],
            "returnType": "array | bool",
            "links": []
        },
        {
            "definition": "run()",
            "target": "fn_run",
            "isStatic": false,
            "isGetterSetter": false,
            "description": "This is the main function that processes the request, determines the route, and sends a response. Routes, settings, validation rules, etc need to be defined prior to calling this function.",
            "attributes": [
                "@return void",
                "@throws \\Exception"
            ],
            "returnType": null,
            "links": []
        }
    ],
    "links": []
}